import React from 'react';
const useSemiPersistanceState =(key,initialState)=>{
    const [value, setValue] = React.useState(
        localStorage.getItem(key)||initialState);
    React.useEffect(()=>{
        localStorage.setItem(key,value);
    },[value,key]);
    return [value,setValue];
}
const App = () => {
    const users = [
        {
            title: 'React',
            url: 'https://reactjs.org/',
            author: 'Jordan Walke',
            num_comments: 3,
            points: 4,
            objectID: 0,
        },
        {
            title: 'Redux',
            url: 'https://redux.js.org/',
            author: 'Dan Abramov, Andrew Clark',
            num_comments: 2,
            points: 5,
            objectID: 1,
        },
    ];
    const [searchTerm,setSearchTerm]= useSemiPersistanceState('search','React');
    const [pwd,setPwd]= useSemiPersistanceState('password','abc');
/*
    const [searchTerm, setSearchTerm] = React.useState(
        localStorage.getItem('search')||'Redux');
    React.useEffect(()=>{
      localStorage.setItem('search',searchTerm);
    },[searchTerm]);
    */
    // React.useEffect(myfunction,[myTerm]);
    const handleSearch = event => {
        setSearchTerm(event.target.value);
    };
    const searchedUsers = users.filter(user =>
        user.title.toLowerCase().includes(searchTerm.toLowerCase())
    );
    return (
        <div>
            <h1>My Hacker Users</h1>
            <InputWithLabel
                id="search"
                label="search"
                type="text"
                value={searchTerm}
                onInputChange={handleSearch}
            />
            <hr />
            <List list={searchedUsers} />
        </div>
    );
};
/*
const Search = props => {
    const {search,onSearch}=props;
   return( <div>
        <label htmlFor="search">Search: </label>
        <input id="search" type="text" value ={search} onChange={onSearch} />
         </div>
       );
}
const Search = ({search,onSearch}) => (
    <>
        <label htmlFor="search">Search: </label>
        <input id="search" type="text" value ={search} onChange={onSearch} />
    </>
);
*/
const InputWithLabel = ({id,label,type,value,onInputChange})=>(
    <>
        <label   htmlFor={id}>{label}</label> &nbsp;
        <input
          id={id}
          type={type}          value={value}
          onChange={onInputChange}
          />
    </>
);
const List = ({list}) =>
    list.map(item => (
        <div key={item.objectID}>
      <span>
        <a href={item.url}>{item.title}</a>
      </span>
            <span>{item.author}</span>
            <span>{item.num_comments}</span>
            <span>{item.points}</span>
        </div>
    ));
export default App;



